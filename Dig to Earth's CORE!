--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local Players = game:GetService("Players");
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local UserInputService = game:GetService("UserInputService");
local Workspace = game:GetService("Workspace");
local player = Players.LocalPlayer;
local COOLDOWN_TIME = 1;
local DEBUG = true;
local TREASURE_COOLDOWN = 0.1;
local maxPetEquip = player.MaxPets.Value;
local craftTypes = {"Gold","Diamond","Void"};
local currentCraftTypeIndex = 1;
local UI_TITLE = "IceHub";
local function makeButtonCircular(button)
	local FlatIdent_378D0 = 0;
	local uiCorner;
	while true do
		if (FlatIdent_378D0 == 0) then
			uiCorner = Instance.new("UICorner");
			uiCorner.CornerRadius = UDim.new(0.5, 0);
			FlatIdent_378D0 = 1;
		end
		if (FlatIdent_378D0 == 1) then
			uiCorner.Parent = button;
			return uiCorner;
		end
	end
end
local SELECTED_COLOR = Color3.fromRGB(210, 110, 40);
local DEFAULT_COLOR = Color3.fromRGB(50, 50, 50);
local tabButtons = {};
local function registerTabButton(button)
	table.insert(tabButtons, button);
end
local function buttonSelected(selectedButton)
	for _, btn in pairs(tabButtons) do
		btn.BackgroundColor3 = DEFAULT_COLOR;
	end
	selectedButton.BackgroundColor3 = SELECTED_COLOR;
end
local function debugLog(message)
	if DEBUG then
		print("[PetSelectorGui] " .. message);
	end
end
local highestWorld = 1;
local function findHighestWorld()
	local FlatIdent_10BCC = 0;
	while true do
		if (0 == FlatIdent_10BCC) then
			highestWorld = 1;
			for _, obj in pairs(workspace:GetChildren()) do
				local number = string.match(obj.Name, "^World(%d+)$");
				if number then
					local FlatIdent_47A9C = 0;
					local num;
					while true do
						if (FlatIdent_47A9C == 0) then
							num = tonumber(number);
							if (num and (num > highestWorld)) then
								highestWorld = num;
							end
							break;
						end
					end
				end
			end
			break;
		end
	end
end
findHighestWorld();
local cachedValidPets = nil;
local cachedDisplayPets = nil;
local function getValidPets()
	if (cachedValidPets and cachedDisplayPets) then
		return cachedValidPets, cachedDisplayPets;
	end
	local success, petsData = pcall(function()
		return require(ReplicatedStorage:WaitForChild("PetsModule"));
	end);
	if (not success or (type(petsData) ~= "table")) then
		return {}, {};
	end
	local seen = {};
	local validPets = {};
	local displayPets = {};
	for petName, petInfo in pairs(petsData) do
		if (not petName:match("^(Gold%s+)") and not petName:match("^(Diamond%s+)") and not petName:match("^(Void%s+)")) then
			local baseName = petName:gsub("%d+$", "");
			if not seen[baseName] then
				local FlatIdent_63487 = 0;
				local rarity;
				local multiplier;
				while true do
					if (FlatIdent_63487 == 1) then
						rarity = petInfo.RarityType or "Unknown";
						multiplier = petInfo.Multiplier or 0;
						FlatIdent_63487 = 2;
					end
					if (FlatIdent_63487 == 0) then
						seen[baseName] = true;
						table.insert(validPets, baseName);
						FlatIdent_63487 = 1;
					end
					if (FlatIdent_63487 == 2) then
						table.insert(displayPets, string.format("x%.2f - %s - %s", multiplier, baseName, rarity));
						break;
					end
				end
			end
		end
	end
	cachedValidPets = validPets;
	cachedDisplayPets = displayPets;
	return validPets, displayPets;
end
local function getValidEquipPets()
	local petsFolder = ReplicatedStorage:WaitForChild("Pets", 10);
	if not petsFolder then
		local FlatIdent_31A5A = 0;
		while true do
			if (FlatIdent_31A5A == 0) then
				warn("Error: Pets folder not found in ReplicatedStorage after 10 seconds");
				return {};
			end
		end
	end
	local validPetSet = {};
	local validPets = {};
	for _, folder in ipairs(petsFolder:GetChildren()) do
		if folder:IsA("Folder") then
			local FlatIdent_5ED46 = 0;
			local pets;
			while true do
				if (FlatIdent_5ED46 == 0) then
					pets = folder:GetChildren();
					for i = 1, #pets do
						local FlatIdent_61585 = 0;
						local petName;
						while true do
							if (0 == FlatIdent_61585) then
								petName = pets[i].Name;
								if not validPetSet[petName] then
									local FlatIdent_A36C = 0;
									while true do
										if (FlatIdent_A36C == 0) then
											validPetSet[petName] = true;
											validPets[#validPets + 1] = petName;
											break;
										end
									end
								end
								break;
							end
						end
					end
					break;
				end
			end
		end
	end
	return validPets;
end
local function getValidPlayers()
	local FlatIdent_7F35E = 0;
	local validPlayerSet;
	local validPlayers;
	while true do
		if (1 == FlatIdent_7F35E) then
			for _, player in ipairs(Players:GetPlayers()) do
				local FlatIdent_455BF = 0;
				local playerName;
				while true do
					if (FlatIdent_455BF == 0) then
						playerName = player.Name;
						if not validPlayerSet[playerName] then
							local FlatIdent_2FD19 = 0;
							while true do
								if (FlatIdent_2FD19 == 0) then
									validPlayerSet[playerName] = true;
									validPlayers[#validPlayers + 1] = playerName;
									break;
								end
							end
						end
						break;
					end
				end
			end
			return validPlayers;
		end
		if (FlatIdent_7F35E == 0) then
			validPlayerSet = {};
			validPlayers = {};
			FlatIdent_7F35E = 1;
		end
	end
end
local visualPetIndex = 500;
local function addPetToTrade(petBaseName)
	local FlatIdent_79536 = 0;
	local validPets;
	local petExists;
	local petNameWithIndex;
	local args;
	while true do
		if (FlatIdent_79536 == 3) then
			game:GetService("ReplicatedStorage"):WaitForChild("TradeRemotes"):WaitForChild("TradeOfferEvent"):FireServer(unpack(args));
			visualPetIndex += 1
			break;
		end
		if (FlatIdent_79536 == 2) then
			petNameWithIndex = petBaseName .. "_" .. tostring(visualPetIndex);
			args = {petNameWithIndex,true};
			FlatIdent_79536 = 3;
		end
		if (FlatIdent_79536 == 0) then
			validPets = getValidEquipPets();
			petExists = false;
			FlatIdent_79536 = 1;
		end
		if (FlatIdent_79536 == 1) then
			for _, petName in ipairs(validPets) do
				if (petName == petBaseName) then
					petExists = true;
					break;
				end
			end
			if not petExists then
				local FlatIdent_12544 = 0;
				while true do
					if (FlatIdent_12544 == 0) then
						warn("Pet not found: " .. petBaseName);
						return;
					end
				end
			end
			FlatIdent_79536 = 2;
		end
	end
end
debugLog("Setting up UI");
local screenGui = Instance.new("ScreenGui");
screenGui.Name = "PetSelectorGui";
screenGui.Parent = player:WaitForChild("PlayerGui");
screenGui.ResetOnSpawn = false;
local mainFrame = Instance.new("Frame");
mainFrame.Size = UDim2.new(0, 400, 0, 620);
mainFrame.Position = UDim2.new(0.5, -225, 0.5, -325);
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
mainFrame.BackgroundTransparency = 0.2;
mainFrame.BorderSizePixel = 0;
mainFrame.Parent = screenGui;
mainFrame.Active = true;
mainFrame.Draggable = true;
local uiCorner = Instance.new("UICorner");
uiCorner.CornerRadius = UDim.new(0, 8);
uiCorner.Parent = mainFrame;
local uiStroke = Instance.new("UIStroke");
uiStroke.Thickness = 2;
uiStroke.Color = Color3.fromRGB(100, 100, 100);
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border;
uiStroke.Parent = mainFrame;
local mainTitleLabel = Instance.new("TextLabel");
mainTitleLabel.Size = UDim2.new(1, -80, 0, 30);
mainTitleLabel.Position = UDim2.new(0, 10, 0, 25);
mainTitleLabel.BackgroundTransparency = 1;
mainTitleLabel.Text = UI_TITLE;
mainTitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
mainTitleLabel.TextXAlignment = Enum.TextXAlignment.Left;
mainTitleLabel.Font = Enum.Font.SourceSansSemibold;
mainTitleLabel.TextSize = 30;
mainTitleLabel.Parent = mainFrame;
local tabFrame = Instance.new("Frame");
tabFrame.Size = UDim2.new(0, 100, 1, 0);
tabFrame.Position = UDim2.new(0, 0, 0, 0);
tabFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
tabFrame.BackgroundTransparency = 0.1;
tabFrame.BorderSizePixel = 0;
tabFrame.Parent = mainFrame;
local uiCornerTab = Instance.new("UICorner");
uiCornerTab.CornerRadius = UDim.new(0, 8);
uiCornerTab.Parent = tabFrame;
local opTab = Instance.new("TextButton");
opTab.Size = UDim2.new(0, 80, 0, 40);
opTab.Position = UDim2.new(0, 10, 0, 80);
opTab.Text = "Op";
opTab.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
opTab.TextColor3 = Color3.fromRGB(255, 255, 255);
opTab.Parent = tabFrame;
makeButtonCircular(opTab);
local equipTab = Instance.new("TextButton");
equipTab.Size = UDim2.new(0, 80, 0, 40);
equipTab.Position = UDim2.new(0, 10, 0, 125);
equipTab.Text = "Equip";
equipTab.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
equipTab.TextColor3 = Color3.fromRGB(255, 255, 255);
equipTab.Parent = tabFrame;
makeButtonCircular(equipTab);
local craftTab = Instance.new("TextButton");
craftTab.Size = UDim2.new(0, 80, 0, 40);
craftTab.Position = UDim2.new(0, 10, 0, 170);
craftTab.Text = "Craft";
craftTab.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
craftTab.TextColor3 = Color3.fromRGB(255, 255, 255);
craftTab.Parent = tabFrame;
makeButtonCircular(craftTab);
local tradeTab = Instance.new("TextButton");
tradeTab.Size = UDim2.new(0, 80, 0, 40);
tradeTab.Position = UDim2.new(0, 10, 0, 215);
tradeTab.Text = "Trading ";
tradeTab.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
tradeTab.TextColor3 = Color3.fromRGB(255, 255, 255);
tradeTab.Parent = tabFrame;
makeButtonCircular(tradeTab);
local statsTab = Instance.new("TextButton");
statsTab.Size = UDim2.new(0, 80, 0, 40);
statsTab.Position = UDim2.new(0, 10, 0, 535);
statsTab.Text = "Stats";
statsTab.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
statsTab.TextColor3 = Color3.fromRGB(255, 255, 255);
statsTab.Parent = tabFrame;
makeButtonCircular(statsTab);
registerTabButton(opTab);
registerTabButton(equipTab);
registerTabButton(craftTab);
registerTabButton(tradeTab);
registerTabButton(statsTab);
local contentFrame = Instance.new("Frame");
contentFrame.Size = UDim2.new(1, -100, 1, 0);
contentFrame.Position = UDim2.new(0, 100, 0, 0);
contentFrame.BackgroundTransparency = 1;
contentFrame.Parent = mainFrame;
local closeButton = Instance.new("TextButton");
closeButton.Size = UDim2.new(0, 25, 0, 25);
closeButton.Position = UDim2.new(1, -35, 0, 5);
closeButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0);
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255);
closeButton.Text = "X";
closeButton.TextSize = 18;
closeButton.Parent = mainFrame;
makeButtonCircular(closeButton);
closeButton.MouseButton1Click:Connect(function()
	local FlatIdent_29B3D = 0;
	while true do
		if (FlatIdent_29B3D == 0) then
			screenGui.Enabled = false;
			debugLog("UI closed");
			break;
		end
	end
end);
local opContent = Instance.new("Frame");
opContent.Size = UDim2.new(1, 0, 1, 0);
opContent.BackgroundTransparency = 1;
opContent.Visible = true;
opContent.Parent = contentFrame;
local statsContent = Instance.new("Frame");
statsContent.Size = UDim2.new(1, 0, 1, 0);
statsContent.BackgroundTransparency = 1;
statsContent.Visible = false;
statsContent.Parent = contentFrame;
local craftContent = Instance.new("Frame");
craftContent.Size = UDim2.new(1, 0, 1, 0);
craftContent.BackgroundTransparency = 1;
craftContent.Visible = false;
craftContent.Parent = contentFrame;
local equipContent = Instance.new("Frame");
equipContent.Size = UDim2.new(1, 0, 1, 0);
equipContent.BackgroundTransparency = 1;
equipContent.Visible = false;
equipContent.Parent = contentFrame;
local tradeContent = Instance.new("Frame");
tradeContent.Size = UDim2.new(1, 0, 1, 0);
tradeContent.BackgroundTransparency = 1;
tradeContent.Visible = false;
tradeContent.Parent = contentFrame;
opTab.MouseButton1Click:Connect(function()
	opContent.Visible = true;
	statsContent.Visible = false;
	craftContent.Visible = false;
	equipContent.Visible = false;
	tradeContent.Visible = false;
	buttonSelected(opTab);
	debugLog("Switched to Op tab");
end);
statsTab.MouseButton1Click:Connect(function()
	local FlatIdent_3EEE1 = 0;
	while true do
		if (FlatIdent_3EEE1 == 1) then
			craftContent.Visible = false;
			equipContent.Visible = false;
			FlatIdent_3EEE1 = 2;
		end
		if (FlatIdent_3EEE1 == 0) then
			opContent.Visible = false;
			statsContent.Visible = true;
			FlatIdent_3EEE1 = 1;
		end
		if (FlatIdent_3EEE1 == 2) then
			tradeContent.Visible = false;
			buttonSelected(statsTab);
			FlatIdent_3EEE1 = 3;
		end
		if (FlatIdent_3EEE1 == 3) then
			debugLog("Switched to Stats tab");
			break;
		end
	end
end);
craftTab.MouseButton1Click:Connect(function()
	opContent.Visible = false;
	statsContent.Visible = false;
	craftContent.Visible = true;
	equipContent.Visible = false;
	tradeContent.Visible = false;
	buttonSelected(craftTab);
	debugLog("Switched to Craft tab");
	updatePetSelectionList();
	updateInventoryList();
end);
equipTab.MouseButton1Click:Connect(function()
	local FlatIdent_52551 = 0;
	while true do
		if (FlatIdent_52551 == 1) then
			craftContent.Visible = false;
			equipContent.Visible = true;
			FlatIdent_52551 = 2;
		end
		if (FlatIdent_52551 == 0) then
			opContent.Visible = false;
			statsContent.Visible = false;
			FlatIdent_52551 = 1;
		end
		if (FlatIdent_52551 == 2) then
			tradeContent.Visible = false;
			buttonSelected(equipTab);
			FlatIdent_52551 = 3;
		end
		if (FlatIdent_52551 == 3) then
			debugLog("Switched to Equip tab");
			break;
		end
	end
end);
tradeTab.MouseButton1Click:Connect(function()
	local FlatIdent_8B523 = 0;
	while true do
		if (FlatIdent_8B523 == 0) then
			opContent.Visible = false;
			statsContent.Visible = false;
			FlatIdent_8B523 = 1;
		end
		if (FlatIdent_8B523 == 1) then
			craftContent.Visible = false;
			equipContent.Visible = false;
			FlatIdent_8B523 = 2;
		end
		if (2 == FlatIdent_8B523) then
			tradeContent.Visible = true;
			buttonSelected(tradeTab);
			FlatIdent_8B523 = 3;
		end
		if (FlatIdent_8B523 == 3) then
			debugLog("Switched to Trade tab");
			break;
		end
	end
end);
local u1 = game:GetService("Players").LocalPlayer;
local v2 = script.Parent;
local u3 = false;
local u4 = game.ReplicatedStorage:WaitForChild("Sounds"):WaitForChild("OpenFrameSound");
local function teleportPart(targetPart)
	if not u3 then
		local FlatIdent_28F3E = 0;
		local v5;
		while true do
			if (FlatIdent_28F3E == 0) then
				u3 = true;
				v5 = u1.Character;
				FlatIdent_28F3E = 1;
			end
			if (FlatIdent_28F3E == 1) then
				if (v5 and u1:FindFirstChild("CurrentWorld")) then
					local v6 = "World" .. u1.CurrentWorld.Value;
					local v7 = workspace:WaitForChild(v6):WaitForChild(targetPart);
					local v8 = v7 and v5:FindFirstChild("HumanoidRootPart");
					if v8 then
						local FlatIdent_98388 = 0;
						while true do
							if (FlatIdent_98388 == 0) then
								v8.CFrame = v7.CFrame + Vector3.new(0, 5, 0);
								u4:Play();
								break;
							end
						end
					end
				end
				task.delay(1, function()
					u3 = false;
				end);
				break;
			end
		end
	end
end
local autoDigButton = Instance.new("TextButton");
autoDigButton.Size = UDim2.new(0, 280, 0, 40);
autoDigButton.Position = UDim2.new(0, 10, 0, 450);
autoDigButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
autoDigButton.TextColor3 = Color3.fromRGB(255, 255, 255);
autoDigButton.Text = "Start Auto Dig in Current World";
autoDigButton.Parent = opContent;
makeButtonCircular(autoDigButton);
local autoDigActive = false;
local function startAutoDig()
	local FlatIdent_5F1CB = 0;
	while true do
		if (FlatIdent_5F1CB == 0) then
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoDigEvent"):FireServer();
			autoDigActive = true;
			FlatIdent_5F1CB = 1;
		end
		if (FlatIdent_5F1CB == 2) then
			autoDigButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0);
			debugLog("AutoDig started");
			break;
		end
		if (FlatIdent_5F1CB == 1) then
			teleportPart("MineBorder");
			autoDigButton.Text = "Stop AutoDig in Current World";
			FlatIdent_5F1CB = 2;
		end
	end
end
local function stopAutoDig()
	local FlatIdent_1A54 = 0;
	while true do
		if (FlatIdent_1A54 == 2) then
			debugLog("AutoDig stopped");
			break;
		end
		if (FlatIdent_1A54 == 1) then
			autoDigButton.Text = "Start AutoDig in Current World";
			autoDigButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
			FlatIdent_1A54 = 2;
		end
		if (0 == FlatIdent_1A54) then
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoDigEvent"):FireServer();
			autoDigActive = false;
			FlatIdent_1A54 = 1;
		end
	end
end
autoDigButton.MouseButton1Click:Connect(function()
	if not autoDigActive then
		startAutoDig();
	else
		stopAutoDig();
	end
end);
local infMoneyButton = Instance.new("TextButton");
infMoneyButton.Size = UDim2.new(0, 280, 0, 40);
infMoneyButton.Position = UDim2.new(0, 10, 0, 350);
infMoneyButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
infMoneyButton.TextColor3 = Color3.fromRGB(255, 255, 255);
infMoneyButton.Text = "Start Infinite Money";
infMoneyButton.Parent = opContent;
makeButtonCircular(infMoneyButton);
local infMoneyActive = false;
local spinPrizeRemote = ReplicatedStorage:WaitForChild("Remotes", 5) and ReplicatedStorage.Remotes:FindFirstChild("SpinPrizeEvent");
local infMoneyCoroutine;
local function startInfiniteMoney()
	local FlatIdent_494F6 = 0;
	while true do
		if (FlatIdent_494F6 == 3) then
			debugLog("Infinite Money started");
			break;
		end
		if (FlatIdent_494F6 == 2) then
			infMoneyCoroutine = coroutine.create(function()
				while infMoneyActive do
					local FlatIdent_4508F = 0;
					while true do
						if (FlatIdent_4508F == 0) then
							for i = 1, 10 do
								if not infMoneyActive then
									break;
								end
								spinPrizeRemote:FireServer(8);
							end
							wait(0.3);
							break;
						end
					end
				end
			end);
			coroutine.resume(infMoneyCoroutine);
			FlatIdent_494F6 = 3;
		end
		if (FlatIdent_494F6 == 0) then
			if not spinPrizeRemote then
				local FlatIdent_21449 = 0;
				while true do
					if (FlatIdent_21449 == 0) then
						debugLog("Error: SpinPrizeEvent remote not found");
						feedbackLabel.Text = "Error: SpinPrizeEvent not found.";
						FlatIdent_21449 = 1;
					end
					if (FlatIdent_21449 == 1) then
						return;
					end
				end
			end
			infMoneyActive = true;
			FlatIdent_494F6 = 1;
		end
		if (FlatIdent_494F6 == 1) then
			infMoneyButton.Text = "Stop Infinite Money";
			infMoneyButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0);
			FlatIdent_494F6 = 2;
		end
	end
end
local function stopInfiniteMoney()
	infMoneyActive = false;
	infMoneyButton.Text = "Start Infinite Money";
	infMoneyButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
	debugLog("Infinite Money stopped");
end
infMoneyButton.MouseButton1Click:Connect(function()
	if infMoneyActive then
		local FlatIdent_272FB = 0;
		while true do
			if (FlatIdent_272FB == 0) then
				stopInfiniteMoney();
				feedbackLabel.Text = "Infinite Money Stopped.";
				break;
			end
		end
	else
		startInfiniteMoney();
		feedbackLabel.Text = "Infinite Money Started!";
	end
end);
local infTreasureButton = Instance.new("TextButton");
infTreasureButton.Size = UDim2.new(0, 280, 0, 40);
infTreasureButton.Position = UDim2.new(0, 10, 0, 400);
infTreasureButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
infTreasureButton.TextColor3 = Color3.fromRGB(255, 255, 255);
infTreasureButton.Text = "Collect All Treasure";
infTreasureButton.Parent = opContent;
makeButtonCircular(infTreasureButton);
local infTreasureActive = false;
local treasureRemote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("TreasureEvent");
local worldTeleportRemote = ReplicatedStorage:WaitForChild("Remotes", 5) and ReplicatedStorage.Remotes:FindFirstChild("WorldTeleportEvent");
local previousGems = player:FindFirstChild("Gems") and player.Gems.Value;
local unchangedCount = 0;
local function startCollectAllTreasure()
	local FlatIdent_8ABD6 = 0;
	local treasureFolder;
	while true do
		if (FlatIdent_8ABD6 == 0) then
			if (not treasureRemote or not worldTeleportRemote) then
				local FlatIdent_2A9F7 = 0;
				while true do
					if (FlatIdent_2A9F7 == 0) then
						debugLog("Error: Required remotes not found");
						feedbackLabel.Text = "Error: Missing remotes.";
						FlatIdent_2A9F7 = 1;
					end
					if (FlatIdent_2A9F7 == 1) then
						return;
					end
				end
			end
			treasureFolder = Workspace:FindFirstChild("Treasure");
			if not treasureFolder then
				feedbackLabel.Text = "Error: Treasure folder not found.";
				return;
			end
			worldTeleportRemote:FireServer(highestWorld);
			FlatIdent_8ABD6 = 1;
		end
		if (FlatIdent_8ABD6 == 1) then
			wait(0.5);
			teleportPart("SurfacePart");
			wait(0.5);
			infTreasureActive = true;
			FlatIdent_8ABD6 = 2;
		end
		if (FlatIdent_8ABD6 == 2) then
			infTreasureButton.Text = "Stop Collecting Treasure";
			infTreasureButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0);
			coroutine.wrap(function()
				local FlatIdent_6AEED = 0;
				while true do
					if (FlatIdent_6AEED == 0) then
						while infTreasureActive do
							local currentGems = player.Gems.Value;
							if (currentGems == previousGems) then
								unchangedCount = unchangedCount + 1;
							else
								unchangedCount = 0;
							end
							previousGems = currentGems;
							if (unchangedCount >= 5) then
								debugLog("Gems value unchanged. Stopping collection.");
								infTreasureActive = false;
								infTreasureButton.Text = "Collect All Treasure";
								infTreasureButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
								feedbackLabel.Text = "Treasure collection stopped: No gem changes.";
								break;
							end
							local treasures = treasureFolder:GetChildren();
							for _, treasure in ipairs(treasures) do
								if not infTreasureActive then
									break;
								end
								treasureRemote:FireServer(treasure.Name);
								wait(TREASURE_COOLDOWN);
							end
						end
						if infTreasureActive then
							local FlatIdent_28855 = 0;
							while true do
								if (FlatIdent_28855 == 1) then
									infTreasureButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
									feedbackLabel.Text = "Treasure collection stopped.";
									break;
								end
								if (FlatIdent_28855 == 0) then
									infTreasureActive = false;
									infTreasureButton.Text = "Collect All Treasure";
									FlatIdent_28855 = 1;
								end
							end
						end
						break;
					end
				end
			end)();
			break;
		end
	end
end
infTreasureButton.MouseButton1Click:Connect(function()
	if infTreasureActive then
		infTreasureActive = false;
		infTreasureButton.Text = "Collect All Treasure";
		infTreasureButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0);
	else
		startCollectAllTreasure();
	end
end);
local function createStatLabel(name, index)
	local FlatIdent_276C2 = 0;
	local label;
	while true do
		if (FlatIdent_276C2 == 0) then
			label = Instance.new("TextLabel");
			label.Size = UDim2.new(1, -20, 0, 25);
			label.Position = UDim2.new(0, 10, 0, 10 + ((index - 1) * 30));
			label.BackgroundTransparency = 1;
			FlatIdent_276C2 = 1;
		end
		if (FlatIdent_276C2 == 2) then
			label.Name = name .. "Label";
			label.Parent = statsContent;
			return label;
		end
		if (FlatIdent_276C2 == 1) then
			label.TextColor3 = Color3.fromRGB(255, 255, 255);
			label.TextXAlignment = Enum.TextXAlignment.Left;
			label.Font = Enum.Font.SourceSans;
			label.TextSize = 20;
			FlatIdent_276C2 = 2;
		end
	end
end
local stats = {"Gems","CurrentWorld","Cash","Multiplier","BestWorld","Spins","TotalDepth","AutoDig"};
local statLabels = {};
for i, statName in ipairs(stats) do
	statLabels[statName] = createStatLabel(statName, i);
end
spawn(function()
	while true do
		for statName, label in pairs(statLabels) do
			local FlatIdent_854BA = 0;
			local value;
			while true do
				if (FlatIdent_854BA == 0) then
					value = player:FindFirstChild(statName);
					if value then
						label.Text = statName .. ": " .. tostring(value.Value);
					else
						label.Text = statName .. ": N/A";
					end
					break;
				end
			end
		end
		wait(1);
	end
end);
local petLabel = Instance.new("TextLabel");
petLabel.Size = UDim2.new(0, 280, 0, 20);
petLabel.Position = UDim2.new(0, 10, 0, 10);
petLabel.BackgroundTransparency = 1;
petLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
petLabel.Text = "Enter Pet Name:";
petLabel.Parent = opContent;
local petInput = Instance.new("TextBox");
petInput.Size = UDim2.new(0, 280, 0, 30);
petInput.Position = UDim2.new(0, 10, 0, 35);
petInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
petInput.TextColor3 = Color3.fromRGB(255, 255, 255);
petInput.PlaceholderText = "e.g., Planet Seal";
petInput.Text = "";
petInput.Parent = opContent;
petInput.ClearTextOnFocus = false;
local suggestionFrame = Instance.new("ScrollingFrame");
suggestionFrame.Size = UDim2.new(0, 280, 0, 100);
suggestionFrame.Position = UDim2.new(0, 10, 0, 65);
suggestionFrame.BackgroundTransparency = 1;
suggestionFrame.ScrollBarThickness = 6;
suggestionFrame.CanvasSize = UDim2.new(0, 0, 0, 0);
suggestionFrame.ClipsDescendants = true;
suggestionFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y;
suggestionFrame.Parent = opContent;
local uiListLayout = Instance.new("UIListLayout");
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
uiListLayout.Padding = UDim.new(0, 2);
uiListLayout.Parent = suggestionFrame;
local function updateSuggestions(text)
	local FlatIdent_5D802 = 0;
	local petsData;
	local seen;
	local pairedPets;
	while true do
		if (FlatIdent_5D802 == 1) then
			seen = {};
			pairedPets = {};
			FlatIdent_5D802 = 2;
		end
		if (FlatIdent_5D802 == 0) then
			for _, child in ipairs(suggestionFrame:GetChildren()) do
				if child:IsA("TextButton") then
					child:Destroy();
				end
			end
			petsData = require(game:GetService("ReplicatedStorage"):WaitForChild("PetsModule"));
			FlatIdent_5D802 = 1;
		end
		if (2 == FlatIdent_5D802) then
			for petName, petInfo in pairs(petsData) do
				if (not petName:match("^(Gold%s+)") and not petName:match("^(Diamond%s+)") and not petName:match("^(Void%s+)")) then
					local FlatIdent_957A4 = 0;
					local baseName;
					while true do
						if (FlatIdent_957A4 == 0) then
							baseName = petName:gsub("%d+$", "");
							if not seen[baseName] then
								local FlatIdent_71EE8 = 0;
								local rarity;
								local multiplier;
								while true do
									if (1 == FlatIdent_71EE8) then
										multiplier = petInfo.Multiplier or 0;
										table.insert(pairedPets, {name=baseName,display=string.format("x%.2f - %s - %s", multiplier, baseName, rarity),multiplier=multiplier});
										break;
									end
									if (FlatIdent_71EE8 == 0) then
										seen[baseName] = true;
										rarity = petInfo.RarityType or "Unknown";
										FlatIdent_71EE8 = 1;
									end
								end
							end
							break;
						end
					end
				end
			end
			table.sort(pairedPets, function(a, b)
				return a.multiplier > b.multiplier;
			end);
			FlatIdent_5D802 = 3;
		end
		if (FlatIdent_5D802 == 3) then
			for _, pet in ipairs(pairedPets) do
				if ((text == "") or string.find(string.lower(pet.name), string.lower(text), 1, true)) then
					local FlatIdent_4E551 = 0;
					local button;
					while true do
						if (FlatIdent_4E551 == 1) then
							button.BackgroundColor3 = Color3.fromRGB(60, 60, 60);
							button.TextColor3 = Color3.fromRGB(255, 255, 255);
							FlatIdent_4E551 = 2;
						end
						if (FlatIdent_4E551 == 0) then
							button = Instance.new("TextButton");
							button.Size = UDim2.new(1, 0, 0, 25);
							FlatIdent_4E551 = 1;
						end
						if (2 == FlatIdent_4E551) then
							button.Text = pet.display;
							button.Parent = suggestionFrame;
							FlatIdent_4E551 = 3;
						end
						if (FlatIdent_4E551 == 3) then
							makeButtonCircular(button);
							button.MouseButton1Click:Connect(function()
								local FlatIdent_89562 = 0;
								while true do
									if (FlatIdent_89562 == 0) then
										petInput.Text = pet.name;
										updateSuggestions("");
										break;
									end
								end
							end);
							break;
						end
					end
				end
			end
			suggestionFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y);
			break;
		end
	end
end
petInput:GetPropertyChangedSignal("Text"):Connect(function()
	updateSuggestions(petInput.Text);
end);
local teleportLabel = Instance.new("TextLabel");
teleportLabel.Size = UDim2.new(0, 280, 0, 20);
teleportLabel.Position = UDim2.new(0, 10, 0, 500);
teleportLabel.BackgroundTransparency = 1;
teleportLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
teleportLabel.Text = "Enter World:";
teleportLabel.Parent = opContent;
local teleportInput = Instance.new("TextBox");
teleportInput.Size = UDim2.new(0, 280, 0, 30);
teleportInput.Position = UDim2.new(0, 10, 0, 525);
teleportInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
teleportInput.TextColor3 = Color3.fromRGB(255, 255, 255);
teleportInput.PlaceholderText = "e.g., 1";
teleportInput.Text = "";
teleportInput.Parent = opContent;
local teleportButton = Instance.new("TextButton");
teleportButton.Size = UDim2.new(0, 80, 0, 40);
teleportButton.Position = UDim2.new(0.5, -40, 0, 560);
teleportButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215);
teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255);
teleportButton.Text = "Teleport";
teleportButton.Parent = opContent;
makeButtonCircular(teleportButton);
local quantityLabel = Instance.new("TextLabel");
quantityLabel.Size = UDim2.new(0, 280, 0, 20);
quantityLabel.Position = UDim2.new(0, 10, 0, 170);
quantityLabel.BackgroundTransparency = 1;
quantityLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
quantityLabel.Text = "Enter Quantity:";
quantityLabel.Parent = opContent;
local quantityInput = Instance.new("TextBox");
quantityInput.Size = UDim2.new(0, 280, 0, 30);
quantityInput.Position = UDim2.new(0, 10, 0, 195);
quantityInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
quantityInput.TextColor3 = Color3.fromRGB(255, 255, 255);
quantityInput.PlaceholderText = "e.g., 1";
quantityInput.Text = "";
quantityInput.Parent = opContent;
local submitButton = Instance.new("TextButton");
submitButton.Size = UDim2.new(0, 80, 0, 40);
submitButton.Position = UDim2.new(0.5, -40, 0, 235);
submitButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215);
submitButton.TextColor3 = Color3.fromRGB(255, 255, 255);
submitButton.Text = "Submit";
submitButton.Parent = opContent;
makeButtonCircular(submitButton);
local feedbackLabel = Instance.new("TextLabel");
feedbackLabel.Size = UDim2.new(0, 280, 0, 40);
feedbackLabel.Position = UDim2.new(0, 10, 0, 275);
feedbackLabel.BackgroundTransparency = 1;
feedbackLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
feedbackLabel.Text = "";
feedbackLabel.TextWrapped = true;
feedbackLabel.TextScaled = true;
feedbackLabel.TextXAlignment = Enum.TextXAlignment.Center;
feedbackLabel.Parent = opContent;
local lastUsed = 0;
teleportButton.MouseButton1Click:Connect(function()
	local FlatIdent_10DED = 0;
	local currentTime;
	local worldNumber;
	local worldTeleportRemote;
	local success;
	local errorMessage;
	while true do
		if (FlatIdent_10DED == 0) then
			currentTime = tick();
			if ((currentTime - lastUsed) < COOLDOWN_TIME) then
				local FlatIdent_B1F4 = 0;
				while true do
					if (FlatIdent_B1F4 == 1) then
						return;
					end
					if (FlatIdent_B1F4 == 0) then
						feedbackLabel.Text = "Please wait before teleporting again.";
						debugLog("Submit on cooldown");
						FlatIdent_B1F4 = 1;
					end
				end
			end
			FlatIdent_10DED = 1;
		end
		if (FlatIdent_10DED == 4) then
			print(worldNumber);
			break;
		end
		if (3 == FlatIdent_10DED) then
			success, errorMessage = pcall(function()
				local FlatIdent_C595 = 0;
				while true do
					if (FlatIdent_C595 == 1) then
						teleportPart("SurfacePart");
						break;
					end
					if (FlatIdent_C595 == 0) then
						worldTeleportRemote:FireServer(worldNumber);
						wait(0.2);
						FlatIdent_C595 = 1;
					end
				end
			end);
			if success then
				local FlatIdent_90A69 = 0;
				while true do
					if (FlatIdent_90A69 == 1) then
						debugLog("Successfully teleported to World " .. tostring(worldNumber));
						break;
					end
					if (FlatIdent_90A69 == 0) then
						lastUsed = tick();
						feedbackLabel.Text = "Teleported to World " .. tostring(worldNumber)(" !");
						FlatIdent_90A69 = 1;
					end
				end
			else
				local FlatIdent_92514 = 0;
				while true do
					if (FlatIdent_92514 == 0) then
						feedbackLabel.Text = "Failed to teleport: " .. tostring(errorMessage);
						debugLog("Failed to fire worldTeleportRemote: " .. tostring(errorMessage));
						break;
					end
				end
			end
			FlatIdent_10DED = 4;
		end
		if (2 == FlatIdent_10DED) then
			worldTeleportRemote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("WorldTeleportEvent");
			if not worldTeleportRemote then
				feedbackLabel.Text = "Error: worldTeleportRemote not found.";
				debugLog("Error: worldTeleportRemote remote not found");
				return;
			end
			FlatIdent_10DED = 3;
		end
		if (FlatIdent_10DED == 1) then
			worldNumber = tonumber(teleportInput.Text);
			if (not worldNumber or (worldNumber <= 0)) then
				local FlatIdent_86E18 = 0;
				while true do
					if (FlatIdent_86E18 == 1) then
						return;
					end
					if (FlatIdent_86E18 == 0) then
						feedbackLabel.Text = "Please enter a valid number (greater than 0).";
						debugLog("Invalid worldNumber");
						FlatIdent_86E18 = 1;
					end
				end
			end
			FlatIdent_10DED = 2;
		end
	end
end);
submitButton.MouseButton1Click:Connect(function()
	local currentTime = tick();
	if ((currentTime - lastUsed) < COOLDOWN_TIME) then
		local FlatIdent_13B77 = 0;
		while true do
			if (0 == FlatIdent_13B77) then
				feedbackLabel.Text = "Please wait before submitting again.";
				debugLog("Submit on cooldown");
				FlatIdent_13B77 = 1;
			end
			if (FlatIdent_13B77 == 1) then
				return;
			end
		end
	end
	local petName = petInput.Text;
	local quantity = tonumber(quantityInput.Text);
	local validPets = getValidPets();
	if (not petName or (petName == "")) then
		local FlatIdent_7699F = 0;
		while true do
			if (FlatIdent_7699F == 0) then
				feedbackLabel.Text = "Please enter a pet name.";
				debugLog("No pet name entered");
				FlatIdent_7699F = 1;
			end
			if (1 == FlatIdent_7699F) then
				return;
			end
		end
	end
	if (not quantity or (quantity <= 0) or (quantity >= 201)) then
		local FlatIdent_6C34 = 0;
		while true do
			if (0 == FlatIdent_6C34) then
				feedbackLabel.Text = "Please enter a valid quantity (greater than 0 and below 201).";
				debugLog("Invalid quantity");
				FlatIdent_6C34 = 1;
			end
			if (FlatIdent_6C34 == 1) then
				return;
			end
		end
	end
	local petExists = false;
	for _, validPet in pairs(validPets) do
		if (string.lower(validPet) == string.lower(petName)) then
			petExists = true;
			petName = validPet;
			break;
		end
	end
	if not petExists then
		local FlatIdent_A446 = 0;
		while true do
			if (FlatIdent_A446 == 1) then
				return;
			end
			if (FlatIdent_A446 == 0) then
				feedbackLabel.Text = "Pet '" .. petName .. "' does not exist.";
				debugLog("Pet does not exist: " .. petName);
				FlatIdent_A446 = 1;
			end
		end
	end
	local remotepetcage = ReplicatedStorage.Remotes:FindFirstChild("PetCageEvent");
	if not remotepetcage then
		feedbackLabel.Text = "Error: PetCageEvent not found.";
		debugLog("Error: PetCageEvent remote not found");
		return;
	end
	local success, errorMessage = pcall(function()
		for i = 1, quantity do
			remotepetcage:FireServer(petName);
		end
	end);
	if success then
		lastUsed = tick();
		feedbackLabel.Text = "Requested " .. quantity .. " " .. petName .. "(s)!";
		debugLog("Successfully requested " .. quantity .. " " .. petName);
	else
		local FlatIdent_14454 = 0;
		while true do
			if (FlatIdent_14454 == 0) then
				feedbackLabel.Text = "Failed to request pets: " .. tostring(errorMessage);
				debugLog("Failed to fire PetCageEvent: " .. tostring(errorMessage));
				break;
			end
		end
	end
end);
local tradeLabel = Instance.new("TextLabel");
tradeLabel.Size = UDim2.new(0, 280, 0, 20);
tradeLabel.Position = UDim2.new(0, 10, 0, 10);
tradeLabel.BackgroundTransparency = 1;
tradeLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
tradeLabel.Text = "Enter Player Name:";
tradeLabel.Parent = tradeContent;
local tradeInput = Instance.new("TextBox");
tradeInput.Size = UDim2.new(0, 280, 0, 30);
tradeInput.Position = UDim2.new(0, 10, 0, 35);
tradeInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
tradeInput.TextColor3 = Color3.fromRGB(255, 255, 255);
tradeInput.PlaceholderText = "e.g., " .. player.name;
tradeInput.Text = "";
tradeInput.Parent = tradeContent;
tradeInput.ClearTextOnFocus = false;
local tradeSuggestionFrame = Instance.new("ScrollingFrame");
tradeSuggestionFrame.Size = UDim2.new(0, 280, 0, 100);
tradeSuggestionFrame.Position = UDim2.new(0, 10, 0, 65);
tradeSuggestionFrame.BackgroundTransparency = 1;
tradeSuggestionFrame.ScrollBarThickness = 6;
tradeSuggestionFrame.CanvasSize = UDim2.new(0, 0, 0, 0);
tradeSuggestionFrame.ClipsDescendants = true;
tradeSuggestionFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y;
tradeSuggestionFrame.Parent = tradeContent;
local uiListLayout = Instance.new("UIListLayout");
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
uiListLayout.Padding = UDim.new(0, 2);
uiListLayout.Parent = tradeSuggestionFrame;
local tradesubmitButton = Instance.new("TextButton");
tradesubmitButton.Size = UDim2.new(0, 80, 0, 40);
tradesubmitButton.Position = UDim2.new(0.5, -45, 0, 185);
tradesubmitButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215);
tradesubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255);
tradesubmitButton.Text = "Trade Player";
tradesubmitButton.Parent = tradeContent;
makeButtonCircular(tradesubmitButton);
local tradingfeedbackLabel = Instance.new("TextLabel");
tradingfeedbackLabel.Size = UDim2.new(0, 280, 0, 40);
tradingfeedbackLabel.Position = UDim2.new(0, 10, 0, 275);
tradingfeedbackLabel.BackgroundTransparency = 1;
tradingfeedbackLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
tradingfeedbackLabel.Text = "";
tradingfeedbackLabel.TextWrapped = true;
tradingfeedbackLabel.TextScaled = true;
tradingfeedbackLabel.TextXAlignment = Enum.TextXAlignment.Center;
tradingfeedbackLabel.Parent = tradeContent;
local addPetLabel = Instance.new("TextLabel");
addPetLabel.Size = UDim2.new(0, 280, 0, 20);
addPetLabel.Position = UDim2.new(0, 10, 0, 320);
addPetLabel.BackgroundTransparency = 1;
addPetLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
addPetLabel.Text = "ADD PET (VISUAL FOR OTHER PLAYER)";
addPetLabel.Parent = tradeContent;
local addPetInput = Instance.new("TextBox");
addPetInput.Size = UDim2.new(0, 280, 0, 30);
addPetInput.Position = UDim2.new(0, 10, 0, 345);
addPetInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
addPetInput.TextColor3 = Color3.fromRGB(255, 255, 255);
addPetInput.PlaceholderText = "e.g., Planet Seal";
addPetInput.Text = "";
addPetInput.ClearTextOnFocus = false;
addPetInput.Parent = tradeContent;
local petSuggestionFrame = Instance.new("ScrollingFrame");
petSuggestionFrame.Size = UDim2.new(0, 280, 0, 100);
petSuggestionFrame.Position = UDim2.new(0, 10, 0, 380);
petSuggestionFrame.BackgroundTransparency = 1;
petSuggestionFrame.ScrollBarThickness = 6;
petSuggestionFrame.CanvasSize = UDim2.new(0, 0, 0, 0);
petSuggestionFrame.ClipsDescendants = true;
petSuggestionFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y;
petSuggestionFrame.Parent = tradeContent;
local addPetButton = Instance.new("TextButton");
addPetButton.Size = UDim2.new(0, 140, 0, 40);
addPetButton.Position = UDim2.new(0.5, -70, 0, 490);
addPetButton.BackgroundColor3 = Color3.fromRGB(0, 160, 90);
addPetButton.TextColor3 = Color3.fromRGB(255, 255, 255);
addPetButton.Text = "Add Visual Pet";
addPetButton.Parent = tradeContent;
makeButtonCircular(addPetButton);
local petUIListLayout = Instance.new("UIListLayout");
petUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
petUIListLayout.Padding = UDim.new(0, 2);
petUIListLayout.Parent = petSuggestionFrame;
addPetButton.MouseButton1Click:Connect(function()
	local petName = addPetInput.Text;
	if (petName and (petName ~= "")) then
		addPetToTrade(petName);
	end
end);
local function UpdateSuggestions(textBox, suggestionFrame, uiLayout, sourceTableFunction, onSelectCallback)
	local FlatIdent_37555 = 0;
	local options;
	local lowerText;
	while true do
		if (FlatIdent_37555 == 2) then
			suggestionFrame.CanvasSize = UDim2.new(0, 0, 0, uiLayout.AbsoluteContentSize.Y);
			break;
		end
		if (FlatIdent_37555 == 1) then
			lowerText = string.lower(textBox.Text);
			for _, name in ipairs(options) do
				if ((lowerText == "") or string.find(string.lower(name), lowerText, 1, true)) then
					local button = Instance.new("TextButton");
					button.Size = UDim2.new(1, 0, 0, 25);
					button.BackgroundColor3 = Color3.fromRGB(60, 60, 60);
					button.TextColor3 = Color3.fromRGB(255, 255, 255);
					button.Text = name;
					button.Parent = suggestionFrame;
					makeButtonCircular(button);
					button.MouseButton1Click:Connect(function()
						local FlatIdent_2F298 = 0;
						while true do
							if (FlatIdent_2F298 == 0) then
								onSelectCallback(name);
								UpdateSuggestions(textBox, suggestionFrame, uiLayout, sourceTableFunction, onSelectCallback);
								break;
							end
						end
					end);
				end
			end
			FlatIdent_37555 = 2;
		end
		if (FlatIdent_37555 == 0) then
			for _, child in ipairs(suggestionFrame:GetChildren()) do
				if child:IsA("TextButton") then
					child:Destroy();
				end
			end
			options = sourceTableFunction();
			FlatIdent_37555 = 1;
		end
	end
end
tradeInput:GetPropertyChangedSignal("Text"):Connect(function()
	UpdateSuggestions(tradeInput, tradeSuggestionFrame, uiListLayout, getValidPlayers, function(name)
		tradeInput.Text = name;
	end);
end);
addPetInput:GetPropertyChangedSignal("Text"):Connect(function()
	UpdateSuggestions(addPetInput, petSuggestionFrame, petUIListLayout, getValidEquipPets, function(petName)
		addPetInput.Text = petName;
	end);
end);
tradesubmitButton.MouseButton1Click:Connect(function()
	local currentTime = tick();
	if ((currentTime - lastUsed) < COOLDOWN_TIME) then
		local FlatIdent_7D3C9 = 0;
		while true do
			if (1 == FlatIdent_7D3C9) then
				return;
			end
			if (0 == FlatIdent_7D3C9) then
				tradingfeedbackLabel.Text = "Please wait before submitting again.";
				debugLog("Submit on cooldown");
				FlatIdent_7D3C9 = 1;
			end
		end
	end
	local playerName = tradeInput.Text;
	local validPlayers = getValidPlayers();
	if (not playerName or (playerName == "")) then
		local FlatIdent_15034 = 0;
		while true do
			if (FlatIdent_15034 == 1) then
				return;
			end
			if (FlatIdent_15034 == 0) then
				tradingfeedbackLabel.Text = "Please enter a Player name.";
				debugLog("No player name entered");
				FlatIdent_15034 = 1;
			end
		end
	end
	local playerExists = false;
	for _, validPlayer in pairs(validPlayers) do
		if (string.lower(validPlayer) == string.lower(playerName)) then
			playerExists = true;
			playerName = validPlayer;
			break;
		end
	end
	if not playerExists then
		local FlatIdent_253F0 = 0;
		while true do
			if (0 == FlatIdent_253F0) then
				tradingfeedbackLabel.Text = "Player '" .. playerName .. "' does not exist.";
				debugLog("Player does not exist: " .. playerName);
				FlatIdent_253F0 = 1;
			end
			if (1 == FlatIdent_253F0) then
				return;
			end
		end
	end
	local targetPlayer = Players:FindFirstChild(playerName);
	if not targetPlayer then
		local FlatIdent_6B9E2 = 0;
		while true do
			if (FlatIdent_6B9E2 == 0) then
				tradingfeedbackLabel.Text = "Player not currently in game.";
				debugLog("Player not found: " .. playerName);
				FlatIdent_6B9E2 = 1;
			end
			if (FlatIdent_6B9E2 == 1) then
				return;
			end
		end
	end
	if (targetPlayer:FindFirstChild("IsTrading") and (targetPlayer.IsTrading.Value == true)) then
		local FlatIdent_1CFC3 = 0;
		while true do
			if (FlatIdent_1CFC3 == 0) then
				tradingfeedbackLabel.Text = playerName .. " is already trading.";
				debugLog(playerName .. " is already in a trade.");
				FlatIdent_1CFC3 = 1;
			end
			if (FlatIdent_1CFC3 == 1) then
				return;
			end
		end
	end
	local remoteSendTrade = game:GetService("ReplicatedStorage"):WaitForChild("TradeRemotes"):FindFirstChild("TradeRequestAcceptEvent");
	if not remoteSendTrade then
		local FlatIdent_35C62 = 0;
		while true do
			if (FlatIdent_35C62 == 0) then
				tradingfeedbackLabel.Text = "Error: Trade remote not found.";
				debugLog("TradeRequestAcceptEvent not found");
				FlatIdent_35C62 = 1;
			end
			if (FlatIdent_35C62 == 1) then
				return;
			end
		end
	end
	local success, errorMessage = pcall(function()
		remoteSendTrade:FireServer(targetPlayer);
	end);
	if success then
		local FlatIdent_4058F = 0;
		while true do
			if (FlatIdent_4058F == 1) then
				debugLog("Trade request sent to " .. playerName);
				break;
			end
			if (FlatIdent_4058F == 0) then
				lastUsed = tick();
				tradingfeedbackLabel.Text = "Trade request sent to " .. playerName .. ".";
				FlatIdent_4058F = 1;
			end
		end
	else
		tradingfeedbackLabel.Text = "Failed to send trade: " .. tostring(errorMessage);
		debugLog("Failed to fire trade remote: " .. tostring(errorMessage));
	end
end);
local equipPetLabel = Instance.new("TextLabel");
equipPetLabel.Size = UDim2.new(0, 280, 0, 20);
equipPetLabel.Position = UDim2.new(0, 10, 0, 10);
equipPetLabel.BackgroundTransparency = 1;
equipPetLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
equipPetLabel.Text = "Enter Pet Name:";
equipPetLabel.Parent = equipContent;
local equipPetInput = Instance.new("TextBox");
equipPetInput.Size = UDim2.new(0, 280, 0, 30);
equipPetInput.Position = UDim2.new(0, 10, 0, 35);
equipPetInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
equipPetInput.TextColor3 = Color3.fromRGB(255, 255, 255);
equipPetInput.PlaceholderText = "e.g., Void Planet Seal";
equipPetInput.Text = "";
equipPetInput.Parent = equipContent;
equipPetInput.ClearTextOnFocus = false;
local equipSuggestionFrame = Instance.new("ScrollingFrame");
equipSuggestionFrame.Size = UDim2.new(0, 280, 0, 100);
equipSuggestionFrame.Position = UDim2.new(0, 10, 0, 65);
equipSuggestionFrame.BackgroundTransparency = 1;
equipSuggestionFrame.ScrollBarThickness = 6;
equipSuggestionFrame.CanvasSize = UDim2.new(0, 0, 0, 0);
equipSuggestionFrame.ClipsDescendants = true;
equipSuggestionFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y;
equipSuggestionFrame.Parent = equipContent;
local uiListLayout = Instance.new("UIListLayout");
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
uiListLayout.Padding = UDim.new(0, 2);
uiListLayout.Parent = equipSuggestionFrame;
local equipquantityLabel = Instance.new("TextLabel");
equipquantityLabel.Size = UDim2.new(0, 280, 0, 20);
equipquantityLabel.Position = UDim2.new(0, 10, 0, 170);
equipquantityLabel.BackgroundTransparency = 1;
equipquantityLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
equipquantityLabel.Text = "Enter Quantity (Max " .. maxPetEquip .. ")";
equipquantityLabel.Parent = equipContent;
local equipquantityInput = Instance.new("TextBox");
equipquantityInput.Size = UDim2.new(0, 280, 0, 30);
equipquantityInput.Position = UDim2.new(0, 10, 0, 195);
equipquantityInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
equipquantityInput.TextColor3 = Color3.fromRGB(255, 255, 255);
equipquantityInput.PlaceholderText = "e.g., 1";
equipquantityInput.Text = "";
equipquantityInput.Parent = equipContent;
local equipsubmitButton = Instance.new("TextButton");
equipsubmitButton.Size = UDim2.new(0, 80, 0, 40);
equipsubmitButton.Position = UDim2.new(0.5, -90, 0, 235);
equipsubmitButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215);
equipsubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255);
equipsubmitButton.Text = "Submit";
equipsubmitButton.Parent = equipContent;
makeButtonCircular(equipsubmitButton);
local unequipAllButton = Instance.new("TextButton");
unequipAllButton.Size = UDim2.new(0, 80, 0, 40);
unequipAllButton.Position = UDim2.new(0.5, 10, 0, 235);
unequipAllButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215);
unequipAllButton.TextColor3 = Color3.fromRGB(255, 255, 255);
unequipAllButton.Text = "UnequipAll";
unequipAllButton.Parent = equipContent;
makeButtonCircular(unequipAllButton);
local equipfeedbackLabel = Instance.new("TextLabel");
equipfeedbackLabel.Size = UDim2.new(0, 280, 0, 40);
equipfeedbackLabel.Position = UDim2.new(0, 10, 0, 275);
equipfeedbackLabel.BackgroundTransparency = 1;
equipfeedbackLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
equipfeedbackLabel.Text = "";
equipfeedbackLabel.TextWrapped = true;
equipfeedbackLabel.TextScaled = true;
equipfeedbackLabel.TextXAlignment = Enum.TextXAlignment.Center;
equipfeedbackLabel.Parent = equipContent;
local function EquipUpdateSuggestions(text)
	local FlatIdent_243F3 = 0;
	local validPets;
	while true do
		if (FlatIdent_243F3 == 1) then
			for _, name in ipairs(validPets) do
				if ((text == "") or string.find(string.lower(name), string.lower(text), 1, true)) then
					local button = Instance.new("TextButton");
					button.Size = UDim2.new(1, 0, 0, 25);
					button.BackgroundColor3 = Color3.fromRGB(60, 60, 60);
					button.TextColor3 = Color3.fromRGB(255, 255, 255);
					button.Text = name;
					button.Parent = equipSuggestionFrame;
					makeButtonCircular(button);
					button.MouseButton1Click:Connect(function()
						local FlatIdent_47EEF = 0;
						while true do
							if (FlatIdent_47EEF == 0) then
								equipPetInput.Text = name;
								EquipUpdateSuggestions("");
								break;
							end
						end
					end);
				end
			end
			equipSuggestionFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y);
			break;
		end
		if (FlatIdent_243F3 == 0) then
			for _, child in ipairs(equipSuggestionFrame:GetChildren()) do
				if child:IsA("TextButton") then
					child:Destroy();
				end
			end
			validPets = getValidEquipPets();
			FlatIdent_243F3 = 1;
		end
	end
end
equipPetInput:GetPropertyChangedSignal("Text"):Connect(function()
	EquipUpdateSuggestions(equipPetInput.Text);
end);
unequipAllButton.MouseButton1Click:Connect(function()
	local FlatIdent_73F66 = 0;
	local currentTime;
	local success;
	local errorMessage;
	while true do
		if (FlatIdent_73F66 == 1) then
			success, errorMessage = pcall(function()
				game:GetService("ReplicatedStorage"):WaitForChild("PetRemotes"):WaitForChild("UnequipAll"):FireServer();
			end);
			if success then
				lastUsed = tick();
			end
			break;
		end
		if (FlatIdent_73F66 == 0) then
			currentTime = tick();
			if ((currentTime - lastUsed) < COOLDOWN_TIME) then
				local FlatIdent_C79F = 0;
				while true do
					if (0 == FlatIdent_C79F) then
						equipfeedbackLabel.Text = "Please wait before submitting again.";
						debugLog("Submit on cooldown");
						FlatIdent_C79F = 1;
					end
					if (FlatIdent_C79F == 1) then
						return;
					end
				end
			end
			FlatIdent_73F66 = 1;
		end
	end
end);
equipsubmitButton.MouseButton1Click:Connect(function()
	local FlatIdent_15354 = 0;
	local currentTime;
	local petName;
	local quantity;
	local validPets;
	local petExists;
	local remoteEquip;
	local success;
	local errorMessage;
	while true do
		if (FlatIdent_15354 == 2) then
			if (not quantity or (quantity <= 0) or (quantity >= (maxPetEquip + 1))) then
				local FlatIdent_85FF9 = 0;
				while true do
					if (FlatIdent_85FF9 == 0) then
						equipfeedbackLabel.Text = "Please enter a valid quantity (greater than 0 and below )" .. (maxPetEquip + 1)(".");
						debugLog("Invalid quantity");
						FlatIdent_85FF9 = 1;
					end
					if (FlatIdent_85FF9 == 1) then
						return;
					end
				end
			end
			petExists = false;
			for _, validPet in pairs(validPets) do
				if (string.lower(validPet) == string.lower(petName)) then
					petExists = true;
					petName = validPet;
					break;
				end
			end
			FlatIdent_15354 = 3;
		end
		if (0 == FlatIdent_15354) then
			currentTime = tick();
			if ((currentTime - lastUsed) < COOLDOWN_TIME) then
				local FlatIdent_280F1 = 0;
				while true do
					if (FlatIdent_280F1 == 1) then
						return;
					end
					if (FlatIdent_280F1 == 0) then
						equipfeedbackLabel.Text = "Please wait before submitting again.";
						debugLog("Submit on cooldown");
						FlatIdent_280F1 = 1;
					end
				end
			end
			petName = equipPetInput.Text;
			FlatIdent_15354 = 1;
		end
		if (FlatIdent_15354 == 4) then
			success, errorMessage = pcall(function()
				local FlatIdent_5EF9 = 0;
				while true do
					if (FlatIdent_5EF9 == 0) then
						wait(0.1);
						for i = 1, quantity do
							remoteEquip:InvokeServer(petName);
						end
						break;
					end
				end
			end);
			if success then
				local FlatIdent_8CF9A = 0;
				while true do
					if (0 == FlatIdent_8CF9A) then
						lastUsed = tick();
						equipfeedbackLabel.Text = "Requested to equip " .. quantity .. " " .. petName .. "(s)!";
						FlatIdent_8CF9A = 1;
					end
					if (FlatIdent_8CF9A == 1) then
						debugLog("Successfully equipped " .. quantity .. " " .. petName);
						break;
					end
				end
			else
				equipfeedbackLabel.Text = "Failed to equip pets: " .. tostring(errorMessage);
				debugLog("Failed to fire PetEquipEvent: " .. tostring(errorMessage));
			end
			break;
		end
		if (FlatIdent_15354 == 3) then
			if not petExists then
				local FlatIdent_851CE = 0;
				while true do
					if (FlatIdent_851CE == 0) then
						equipfeedbackLabel.Text = "Pet '" .. petName .. "' does not exist.";
						debugLog("Pet does not exist: " .. petName);
						FlatIdent_851CE = 1;
					end
					if (FlatIdent_851CE == 1) then
						return;
					end
				end
			end
			remoteEquip = game:GetService("ReplicatedStorage"):WaitForChild("PetRemotes"):WaitForChild("EquipPet");
			if not remoteEquip then
				local FlatIdent_82AB4 = 0;
				while true do
					if (FlatIdent_82AB4 == 1) then
						return;
					end
					if (FlatIdent_82AB4 == 0) then
						equipfeedbackLabel.Text = "Error: PetCageEvent not found.";
						debugLog("Error: PetCageEvent remote not found");
						FlatIdent_82AB4 = 1;
					end
				end
			end
			FlatIdent_15354 = 4;
		end
		if (1 == FlatIdent_15354) then
			quantity = tonumber(equipquantityInput.Text);
			validPets = getValidEquipPets();
			if (not petName or (petName == "")) then
				local FlatIdent_95405 = 0;
				while true do
					if (1 == FlatIdent_95405) then
						return;
					end
					if (FlatIdent_95405 == 0) then
						equipfeedbackLabel.Text = "Please enter a pet name.";
						debugLog("No pet name entered");
						FlatIdent_95405 = 1;
					end
				end
			end
			FlatIdent_15354 = 2;
		end
	end
end);
local craftPetLabel = Instance.new("TextLabel");
craftPetLabel.Size = UDim2.new(0, 280, 0, 20);
craftPetLabel.Position = UDim2.new(0, 10, 0, 10);
craftPetLabel.BackgroundTransparency = 1;
craftPetLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
craftPetLabel.Text = "Select Pet to Craft:";
craftPetLabel.Parent = craftContent;
local selectedPetName = nil;
local craftPetSelectButton = Instance.new("TextButton");
craftPetSelectButton.Size = UDim2.new(0, 280, 0, 30);
craftPetSelectButton.Position = UDim2.new(0, 10, 0, 35);
craftPetSelectButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
craftPetSelectButton.TextColor3 = Color3.fromRGB(255, 255, 255);
craftPetSelectButton.Text = "Select Pet";
craftPetSelectButton.Parent = craftContent;
makeButtonCircular(craftPetSelectButton);
local craftPetSelectFrame = Instance.new("ScrollingFrame");
craftPetSelectFrame.Size = UDim2.new(0, 280, 0, 80);
craftPetSelectFrame.Position = UDim2.new(0, 10, 0, 65);
craftPetSelectFrame.BackgroundTransparency = 1;
craftPetSelectFrame.ScrollBarThickness = 6;
craftPetSelectFrame.CanvasSize = UDim2.new(0, 0, 0, 0);
craftPetSelectFrame.ClipsDescendants = true;
craftPetSelectFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y;
craftPetSelectFrame.Visible = false;
craftPetSelectFrame.Parent = craftContent;
local craftPetSelectListLayout = Instance.new("UIListLayout");
craftPetSelectListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
craftPetSelectListLayout.Padding = UDim.new(0, 2);
craftPetSelectListLayout.Parent = craftPetSelectFrame;
local function updatePetSelectionList()
	debugLog("Updating pet selection list (from player inventory)");
	for _, child in ipairs(craftPetSelectFrame:GetChildren()) do
		if (child:IsA("TextButton") or child:IsA("TextLabel")) then
			child:Destroy();
		end
	end
	local petsFolder = player:FindFirstChild("Pets");
	if not petsFolder then
		local FlatIdent_38BA4 = 0;
		local label;
		while true do
			if (3 == FlatIdent_38BA4) then
				label.TextXAlignment = Enum.TextXAlignment.Left;
				label.Parent = craftPetSelectFrame;
				FlatIdent_38BA4 = 4;
			end
			if (FlatIdent_38BA4 == 4) then
				craftPetSelectFrame.CanvasSize = UDim2.new(0, 0, 0, craftPetSelectListLayout.AbsoluteContentSize.Y);
				return;
			end
			if (2 == FlatIdent_38BA4) then
				label.TextColor3 = Color3.fromRGB(255, 255, 255);
				label.Text = "No pets in inventory.";
				FlatIdent_38BA4 = 3;
			end
			if (FlatIdent_38BA4 == 1) then
				label.Size = UDim2.new(1, 0, 0, 25);
				label.BackgroundTransparency = 1;
				FlatIdent_38BA4 = 2;
			end
			if (FlatIdent_38BA4 == 0) then
				debugLog("Player has no Pets folder.");
				label = Instance.new("TextLabel");
				FlatIdent_38BA4 = 1;
			end
		end
	end
	local petCounts = {};
	local targetPrefix = craftTypes[currentCraftTypeIndex];
	for _, pet in ipairs(petsFolder:GetChildren()) do
		local FlatIdent_810FF = 0;
		local petName;
		local hasGoldPrefix;
		local hasDiamondPrefix;
		local hasVoidPrefix;
		while true do
			if (FlatIdent_810FF == 1) then
				hasDiamondPrefix = petName:match("^Diamond ") or petName:match("^Diamond") or petName:match("Diamond$") or petName:match(" Diamond$") or petName:match("_Diamond$") or petName:match("^Diamond_") or petName:match("Diamond-") or petName:match("-Diamond");
				hasVoidPrefix = petName:match("^Void ") or petName:match("^Void") or petName:match("Void$") or petName:match(" Void$") or petName:match("_Void$") or petName:match("^Void_") or petName:match("Void-") or petName:match("-Void");
				FlatIdent_810FF = 2;
			end
			if (FlatIdent_810FF == 2) then
				if ((targetPrefix == "Void") and hasDiamondPrefix) then
					local FlatIdent_79F35 = 0;
					while true do
						if (FlatIdent_79F35 == 0) then
							petCounts[petName] = (petCounts[petName] or 0) + 1;
							debugLog("Pet " .. petName .. " matches Void criteria (Diamond prefix)");
							break;
						end
					end
				elseif ((targetPrefix == "Diamond") and hasGoldPrefix) then
					local FlatIdent_C758 = 0;
					while true do
						if (FlatIdent_C758 == 0) then
							petCounts[petName] = (petCounts[petName] or 0) + 1;
							debugLog("Pet " .. petName .. " matches Diamond criteria (Gold prefix)");
							break;
						end
					end
				elseif ((targetPrefix == "Gold") and not (hasGoldPrefix or hasDiamondPrefix or hasVoidPrefix)) then
					local FlatIdent_602BB = 0;
					while true do
						if (FlatIdent_602BB == 0) then
							petCounts[petName] = (petCounts[petName] or 0) + 1;
							debugLog("Pet " .. petName .. " matches Gold criteria (no Gold or Diamond prefix)");
							break;
						end
					end
				end
				break;
			end
			if (FlatIdent_810FF == 0) then
				petName = pet.Name;
				hasGoldPrefix = petName:match("^Gold ") or petName:match("^Gold") or petName:match("Gold$") or petName:match(" Gold$") or petName:match("_Gold$") or petName:match("^Gold_") or petName:match("Gold-") or petName:match("-Gold");
				FlatIdent_810FF = 1;
			end
		end
	end
	local petList = {};
	for name, count in pairs(petCounts) do
		table.insert(petList, {Name=name,Count=count});
	end
	if (#petList == 0) then
		local FlatIdent_6038 = 0;
		local label;
		while true do
			if (FlatIdent_6038 == 1) then
				label.BackgroundTransparency = 1;
				label.TextColor3 = Color3.fromRGB(255, 255, 255);
				FlatIdent_6038 = 2;
			end
			if (FlatIdent_6038 == 0) then
				label = Instance.new("TextLabel");
				label.Size = UDim2.new(1, 0, 0, 25);
				FlatIdent_6038 = 1;
			end
			if (3 == FlatIdent_6038) then
				label.Parent = craftPetSelectFrame;
				debugLog("No pets matched the criteria for " .. targetPrefix);
				break;
			end
			if (FlatIdent_6038 == 2) then
				label.Text = "No suitable pets for " .. targetPrefix .. " crafting.";
				label.TextXAlignment = Enum.TextXAlignment.Left;
				FlatIdent_6038 = 3;
			end
		end
	else
		local FlatIdent_54124 = 0;
		while true do
			if (FlatIdent_54124 == 0) then
				table.sort(petList, function(a, b)
					return a.Name < b.Name;
				end);
				for _, pet in ipairs(petList) do
					local FlatIdent_68E5B = 0;
					local button;
					while true do
						if (FlatIdent_68E5B == 3) then
							makeButtonCircular(button);
							button.MouseButton1Click:Connect(function()
								local FlatIdent_2E7F5 = 0;
								while true do
									if (FlatIdent_2E7F5 == 1) then
										craftPetSelectFrame.Visible = false;
										debugLog("Selected pet: " .. pet.Name);
										break;
									end
									if (FlatIdent_2E7F5 == 0) then
										selectedPetName = pet.Name;
										craftPetSelectButton.Text = pet.Name .. " x" .. pet.Count;
										FlatIdent_2E7F5 = 1;
									end
								end
							end);
							break;
						end
						if (FlatIdent_68E5B == 1) then
							button.BackgroundColor3 = Color3.fromRGB(60, 60, 60);
							button.TextColor3 = Color3.fromRGB(255, 255, 255);
							FlatIdent_68E5B = 2;
						end
						if (FlatIdent_68E5B == 2) then
							button.Text = pet.Name .. " x" .. pet.Count;
							button.Parent = craftPetSelectFrame;
							FlatIdent_68E5B = 3;
						end
						if (FlatIdent_68E5B == 0) then
							button = Instance.new("TextButton");
							button.Size = UDim2.new(1, 0, 0, 25);
							FlatIdent_68E5B = 1;
						end
					end
				end
				break;
			end
		end
	end
	craftPetSelectFrame.CanvasSize = UDim2.new(0, 0, 0, craftPetSelectListLayout.AbsoluteContentSize.Y);
	debugLog("Pet selection list updated with " .. #craftPetSelectFrame:GetChildren() .. " items");
end
craftPetSelectButton.MouseButton1Click:Connect(function()
	local FlatIdent_727DA = 0;
	while true do
		if (FlatIdent_727DA == 1) then
			debugLog("Toggled pet selection frame visibility: " .. tostring(craftPetSelectFrame.Visible));
			break;
		end
		if (0 == FlatIdent_727DA) then
			craftPetSelectFrame.Visible = not craftPetSelectFrame.Visible;
			if craftPetSelectFrame.Visible then
				updatePetSelectionList();
			end
			FlatIdent_727DA = 1;
		end
	end
end);
local craftTypeLabel = Instance.new("TextLabel");
craftTypeLabel.Size = UDim2.new(0, 280, 0, 20);
craftTypeLabel.Position = UDim2.new(0, 10, 0, 150);
craftTypeLabel.BackgroundTransparency = 1;
craftTypeLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
craftTypeLabel.Text = "Craft Type:";
craftTypeLabel.Parent = craftContent;
local craftTypeButton = Instance.new("TextButton");
craftTypeButton.Size = UDim2.new(0, 280, 0, 30);
craftTypeButton.Position = UDim2.new(0, 10, 0, 175);
craftTypeButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
craftTypeButton.TextColor3 = Color3.fromRGB(255, 255, 255);
craftTypeButton.Text = "Gold";
craftTypeButton.Parent = craftContent;
makeButtonCircular(craftTypeButton);
craftTypeButton.MouseButton1Click:Connect(function()
	local FlatIdent_3E76B = 0;
	while true do
		if (1 == FlatIdent_3E76B) then
			selectedPetName = nil;
			craftPetSelectButton.Text = "Select Pet";
			FlatIdent_3E76B = 2;
		end
		if (0 == FlatIdent_3E76B) then
			currentCraftTypeIndex = (currentCraftTypeIndex % #craftTypes) + 1;
			craftTypeButton.Text = craftTypes[currentCraftTypeIndex];
			FlatIdent_3E76B = 1;
		end
		if (3 == FlatIdent_3E76B) then
			debugLog("Craft type changed to: " .. craftTypes[currentCraftTypeIndex]);
			break;
		end
		if (FlatIdent_3E76B == 2) then
			updatePetSelectionList();
			updateInventoryList();
			FlatIdent_3E76B = 3;
		end
	end
end);
local percentageLabel = Instance.new("TextLabel");
percentageLabel.Size = UDim2.new(0, 280, 0, 20);
percentageLabel.Position = UDim2.new(0, 10, 0, 210);
percentageLabel.BackgroundTransparency = 1;
percentageLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
percentageLabel.Text = "Craft Percentage:";
percentageLabel.Parent = craftContent;
local percentageButton = Instance.new("TextButton");
percentageButton.Size = UDim2.new(0, 280, 0, 30);
percentageButton.Position = UDim2.new(0, 10, 0, 235);
percentageButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
percentageButton.TextColor3 = Color3.fromRGB(255, 255, 255);
percentageButton.Text = "20%";
percentageButton.Parent = craftContent;
makeButtonCircular(percentageButton);
local percentageSelectFrame = Instance.new("ScrollingFrame");
percentageSelectFrame.Size = UDim2.new(0, 280, 0, 80);
percentageSelectFrame.Position = UDim2.new(0, 10, 0, 265);
percentageSelectFrame.BackgroundTransparency = 1;
percentageSelectFrame.ScrollBarThickness = 6;
percentageSelectFrame.CanvasSize = UDim2.new(0, 0, 0, 0);
percentageSelectFrame.ClipsDescendants = true;
percentageSelectFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y;
percentageSelectFrame.Visible = false;
percentageSelectFrame.Parent = craftContent;
local percentageListLayout = Instance.new("UIListLayout");
percentageListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
percentageListLayout.Padding = UDim.new(0, 2);
percentageListLayout.Parent = percentageSelectFrame;
local percentages = {"20%","40%","60%","80%","100%"};
local selectedPercentage = 0.2;
percentageButton.MouseButton1Click:Connect(function()
	local FlatIdent_58C0A = 0;
	while true do
		if (FlatIdent_58C0A == 0) then
			percentageSelectFrame.Visible = not percentageSelectFrame.Visible;
			if percentageSelectFrame.Visible then
				local FlatIdent_2F8E7 = 0;
				while true do
					if (FlatIdent_2F8E7 == 0) then
						for _, child in ipairs(percentageSelectFrame:GetChildren()) do
							if (child:IsA("TextButton") or child:IsA("TextLabel")) then
								child:Destroy();
							end
						end
						for _, percentage in ipairs(percentages) do
							local button = Instance.new("TextButton");
							button.Size = UDim2.new(1, 0, 0, 25);
							button.BackgroundColor3 = Color3.fromRGB(60, 60, 60);
							button.TextColor3 = Color3.fromRGB(255, 255, 255);
							button.Text = percentage;
							button.Parent = percentageSelectFrame;
							makeButtonCircular(button);
							button.MouseButton1Click:Connect(function()
								local FlatIdent_35F25 = 0;
								while true do
									if (FlatIdent_35F25 == 0) then
										selectedPercentage = tonumber(percentage:match("(%d+)")) / 100;
										percentageButton.Text = percentage;
										FlatIdent_35F25 = 1;
									end
									if (FlatIdent_35F25 == 1) then
										percentageSelectFrame.Visible = false;
										debugLog("Selected percentage: " .. percentage);
										break;
									end
								end
							end);
						end
						break;
					end
				end
			end
			FlatIdent_58C0A = 1;
		end
		if (FlatIdent_58C0A == 1) then
			percentageSelectFrame.CanvasSize = UDim2.new(0, 0, 0, percentageListLayout.AbsoluteContentSize.Y);
			debugLog("Toggled percentage selection frame visibility: " .. tostring(percentageSelectFrame.Visible));
			break;
		end
	end
end);
local inventoryLabel = Instance.new("TextLabel");
inventoryLabel.Size = UDim2.new(0, 280, 0, 20);
inventoryLabel.Position = UDim2.new(0, 10, 0, 350);
inventoryLabel.BackgroundTransparency = 1;
inventoryLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
inventoryLabel.Text = "Available Pets for Crafting:";
inventoryLabel.Parent = craftContent;
local inventoryFrame = Instance.new("ScrollingFrame");
inventoryFrame.Size = UDim2.new(0, 280, 0, 80);
inventoryFrame.Position = UDim2.new(0, 10, 0, 375);
inventoryFrame.BackgroundTransparency = 1;
inventoryFrame.ScrollBarThickness = 6;
inventoryFrame.CanvasSize = UDim2.new(0, 0, 0, 0);
inventoryFrame.ClipsDescendants = true;
inventoryFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y;
inventoryFrame.Parent = craftContent;
local inventoryListLayout = Instance.new("UIListLayout");
inventoryListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
inventoryListLayout.Padding = UDim.new(0, 2);
inventoryListLayout.Parent = inventoryFrame;
local function updateInventoryList()
	debugLog("Updating inventory list for craft type: " .. (craftTypes[currentCraftTypeIndex] or "Unknown"));
	for _, child in ipairs(inventoryFrame:GetChildren()) do
		if child:IsA("TextLabel") then
			child:Destroy();
		end
	end
	local petsFolder = player:WaitForChild("Pets", 5);
	if not petsFolder then
		local FlatIdent_7695C = 0;
		local label;
		while true do
			if (FlatIdent_7695C == 4) then
				debugLog("No pets folder found");
				return;
			end
			if (FlatIdent_7695C == 0) then
				label = Instance.new("TextLabel");
				label.Size = UDim2.new(1, 0, 0, 25);
				FlatIdent_7695C = 1;
			end
			if (FlatIdent_7695C == 2) then
				label.Text = "No pets in inventory.";
				label.TextXAlignment = Enum.TextXAlignment.Left;
				FlatIdent_7695C = 3;
			end
			if (FlatIdent_7695C == 1) then
				label.BackgroundTransparency = 1;
				label.TextColor3 = Color3.fromRGB(255, 255, 255);
				FlatIdent_7695C = 2;
			end
			if (FlatIdent_7695C == 3) then
				label.Parent = inventoryFrame;
				inventoryFrame.CanvasSize = UDim2.new(0, 0, 0, inventoryListLayout.AbsoluteContentSize.Y);
				FlatIdent_7695C = 4;
			end
		end
	end
	local petCounts = {};
	local targetPrefix = craftTypes[currentCraftTypeIndex];
	for _, pet in ipairs(petsFolder:GetChildren()) do
		local petName = pet.Name;
		debugLog("Checking inventory pet: " .. petName);
		local hasGoldPrefix = petName:match("^Gold ") or petName:match("^Gold") or petName:match("Gold$") or petName:match(" Gold$") or petName:match("_Gold$") or petName:match("^Gold_") or petName:match("Gold-") or petName:match("-Gold");
		local hasDiamondPrefix = petName:match("^Diamond ") or petName:match("^Diamond") or petName:match("Diamond$") or petName:match(" Diamond$") or petName:match("_Diamond$") or petName:match("^Diamond_") or petName:match("Diamond-") or petName:match("-Diamond");
		if ((targetPrefix == "Void") and hasDiamondPrefix and (petName ~= selectedPetName)) then
			petCounts[petName] = (petCounts[petName] or 0) + 1;
			debugLog("Inventory pet " .. petName .. " matches Void criteria (Diamond prefix)");
		elseif ((targetPrefix == "Diamond") and hasGoldPrefix and (petName ~= selectedPetName)) then
			local FlatIdent_761C4 = 0;
			while true do
				if (0 == FlatIdent_761C4) then
					petCounts[petName] = (petCounts[petName] or 0) + 1;
					debugLog("Inventory pet " .. petName .. " matches Diamond criteria (Gold prefix)");
					break;
				end
			end
		elseif ((targetPrefix == "Gold") and not (hasGoldPrefix or hasDiamondPrefix) and (petName ~= selectedPetName)) then
			petCounts[petName] = (petCounts[petName] or 0) + 1;
			debugLog("Inventory pet " .. petName .. " matches Gold criteria (no Gold or Diamond prefix)");
		else
			debugLog("Inventory pet " .. petName .. " does not match criteria for " .. targetPrefix .. " or is selected");
		end
	end
	local petList = {};
	for petName, count in pairs(petCounts) do
		table.insert(petList, {Name=petName,Count=count});
	end
	if (#petList == 0) then
		local FlatIdent_5B0A0 = 0;
		local label;
		while true do
			if (FlatIdent_5B0A0 == 3) then
				label.Parent = inventoryFrame;
				debugLog("No suitable pets for " .. targetPrefix);
				break;
			end
			if (FlatIdent_5B0A0 == 0) then
				label = Instance.new("TextLabel");
				label.Size = UDim2.new(1, 0, 0, 25);
				FlatIdent_5B0A0 = 1;
			end
			if (FlatIdent_5B0A0 == 2) then
				label.Text = "No suitable pets for " .. targetPrefix .. " crafting.";
				label.TextXAlignment = Enum.TextXAlignment.Left;
				FlatIdent_5B0A0 = 3;
			end
			if (FlatIdent_5B0A0 == 1) then
				label.BackgroundTransparency = 1;
				label.TextColor3 = Color3.fromRGB(255, 255, 255);
				FlatIdent_5B0A0 = 2;
			end
		end
	else
		local FlatIdent_643B6 = 0;
		while true do
			if (FlatIdent_643B6 == 1) then
				debugLog("Displayed " .. #petList .. " pets in inventory");
				break;
			end
			if (FlatIdent_643B6 == 0) then
				table.sort(petList, function(a, b)
					return a.Name < b.Name;
				end);
				for _, pet in ipairs(petList) do
					debugLog("Displaying inventory pet: " .. pet.Name .. " x" .. pet.Count);
					local label = Instance.new("TextLabel");
					label.Size = UDim2.new(1, 0, 0, 25);
					label.BackgroundTransparency = 1;
					label.TextColor3 = Color3.fromRGB(255, 255, 255);
					label.Text = pet.Name .. " x" .. pet.Count;
					label.TextXAlignment = Enum.TextXAlignment.Left;
					label.Parent = inventoryFrame;
				end
				FlatIdent_643B6 = 1;
			end
		end
	end
	inventoryFrame.CanvasSize = UDim2.new(0, 0, 0, inventoryListLayout.AbsoluteContentSize.Y);
	debugLog("Inventory list updated with " .. #inventoryFrame:GetChildren() .. " items");
end
local petsFolder = player:WaitForChild("Pets", 5);
if petsFolder then
	petsFolder.ChildAdded:Connect(function()
		updateInventoryList();
		updatePetSelectionList();
		debugLog("Pet added to inventory");
	end);
	petsFolder.ChildRemoved:Connect(function()
		local FlatIdent_943B = 0;
		while true do
			if (FlatIdent_943B == 0) then
				updateInventoryList();
				updatePetSelectionList();
				FlatIdent_943B = 1;
			end
			if (FlatIdent_943B == 1) then
				debugLog("Pet removed from inventory");
				break;
			end
		end
	end);
else
	debugLog("Warning: Pets folder not found on initial load");
end
local craftQuantityLabel = Instance.new("TextLabel");
craftQuantityLabel.Size = UDim2.new(0, 280, 0, 20);
craftQuantityLabel.Position = UDim2.new(0, 10, 0, 460);
craftQuantityLabel.BackgroundTransparency = 1;
craftQuantityLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
craftQuantityLabel.Text = "Enter Quantity to Craft:";
craftQuantityLabel.Parent = craftContent;
local craftQuantityInput = Instance.new("TextBox");
craftQuantityInput.Size = UDim2.new(0, 280, 0, 30);
craftQuantityInput.Position = UDim2.new(0, 10, 0, 485);
craftQuantityInput.BackgroundColor3 = Color3.fromRGB(70, 70, 70);
craftQuantityInput.TextColor3 = Color3.fromRGB(255, 255, 255);
craftQuantityInput.PlaceholderText = "e.g., 100";
craftQuantityInput.Text = "";
craftQuantityInput.Parent = craftContent;
local craftSubmitButton = Instance.new("TextButton");
craftSubmitButton.Size = UDim2.new(0, 80, 0, 40);
craftSubmitButton.Position = UDim2.new(0.5, -40, 0, 520);
craftSubmitButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215);
craftSubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255);
craftSubmitButton.Text = "Craft";
craftSubmitButton.Parent = craftContent;
makeButtonCircular(craftSubmitButton);
local craftFeedbackLabel = Instance.new("TextLabel");
craftFeedbackLabel.Size = UDim2.new(0, 280, 0, 40);
craftFeedbackLabel.Position = UDim2.new(0, 10, 0, 565);
craftFeedbackLabel.BackgroundTransparency = 1;
craftFeedbackLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
craftFeedbackLabel.Text = "";
craftFeedbackLabel.TextWrapped = true;
craftFeedbackLabel.TextScaled = true;
craftFeedbackLabel.TextXAlignment = Enum.TextXAlignment.Center;
craftFeedbackLabel.Parent = craftContent;
local craftLastUsed = 0;
craftSubmitButton.MouseButton1Click:Connect(function()
	local currentTime = tick();
	if ((currentTime - craftLastUsed) < COOLDOWN_TIME) then
		local FlatIdent_1F799 = 0;
		while true do
			if (FlatIdent_1F799 == 1) then
				return;
			end
			if (0 == FlatIdent_1F799) then
				craftFeedbackLabel.Text = "Please wait before crafting again.";
				debugLog("Craft on cooldown");
				FlatIdent_1F799 = 1;
			end
		end
	end
	if not selectedPetName then
		local FlatIdent_6DAAA = 0;
		while true do
			if (FlatIdent_6DAAA == 1) then
				return;
			end
			if (0 == FlatIdent_6DAAA) then
				craftFeedbackLabel.Text = "Please select a pet.";
				debugLog("No pet selected");
				FlatIdent_6DAAA = 1;
			end
		end
	end
	local quantity = tonumber(craftQuantityInput.Text);
	if (not quantity or (quantity <= 0)) then
		craftFeedbackLabel.Text = "Please enter a valid quantity (greater than 0).";
		debugLog("Invalid craft quantity");
		return;
	end
	local craftType = craftTypes[currentCraftTypeIndex];
	local finalPetName;
	if (craftType == "Void") then
		finalPetName = selectedPetName:match("^Diamond (.+)$") or selectedPetName:match("^Diamond(.+)$") or selectedPetName:match("(.+) Diamond$") or selectedPetName:match("(.+)_Diamond$") or selectedPetName:match("(.+)-Diamond$") or selectedPetName;
		finalPetName = "Diamond " .. finalPetName;
	elseif (craftType == "Gold") then
		finalPetName = selectedPetName;
	elseif (craftType == "Diamond") then
		finalPetName = "Gold " .. (selectedPetName:match("^Gold (.+)$") or selectedPetName:match("^Gold(.+)$") or selectedPetName:match("(.+) Gold$") or selectedPetName:match("(.+)_Gold$") or selectedPetName:match("(.+)-Gold$") or selectedPetName);
	end
	local craftMachine = craftType .. "PetCraftEvent";
	local petRemotes = ReplicatedStorage:WaitForChild("PetRemotes", 5);
	local remote = petRemotes:FindFirstChild(craftMachine);
	if not remote then
		craftFeedbackLabel.Text = "Error: PetCraftEvent not found.";
		debugLog("Error: PetCraftEvent remote not found");
		return;
	end
	local neededpercentage = selectedPercentage * 100;
	local success, errorMessage = pcall(function()
		for i = 1, quantity do
			local FlatIdent_7B2EE = 0;
			local args;
			while true do
				if (1 == FlatIdent_7B2EE) then
					wait(0.6);
					break;
				end
				if (0 == FlatIdent_7B2EE) then
					args = {finalPetName,neededpercentage};
					remote:FireServer(unpack(args));
					FlatIdent_7B2EE = 1;
				end
			end
		end
	end);
	if success then
		local FlatIdent_8FACF = 0;
		while true do
			if (0 == FlatIdent_8FACF) then
				craftLastUsed = tick();
				craftFeedbackLabel.Text = "Crafted " .. quantity .. " " .. finalPetName .. "(s) with " .. (selectedPercentage * 100) .. "%!";
				FlatIdent_8FACF = 1;
			end
			if (1 == FlatIdent_8FACF) then
				debugLog("Crafted " .. quantity .. " " .. finalPetName .. " with value " .. adjustedValue);
				selectedPetName = nil;
				FlatIdent_8FACF = 2;
			end
			if (FlatIdent_8FACF == 2) then
				craftPetSelectButton.Text = "Select Pet";
				updateInventoryList();
				FlatIdent_8FACF = 3;
			end
			if (FlatIdent_8FACF == 3) then
				updatePetSelectionList();
				break;
			end
		end
	else
		local FlatIdent_1D765 = 0;
		while true do
			if (0 == FlatIdent_1D765) then
				craftFeedbackLabel.Text = "Failed to craft: " .. tostring(errorMessage);
				debugLog("Failed to fire PetCraftEvent: " .. tostring(errorMessage));
				break;
			end
		end
	end
end);
spawn(function()
	debugLog("Initializing UI");
	updateInventoryList();
	updatePetSelectionList();
	buttonSelected(opTab);
	UpdateSuggestions(tradeInput, tradeSuggestionFrame, uiListLayout, getValidPlayers, function(name)
		tradeInput.Text = name;
	end);
	UpdateSuggestions(addPetInput, petSuggestionFrame, petUIListLayout, getValidEquipPets, function(petName)
		addPetInput.Text = petName;
	end);
	EquipUpdateSuggestions(equipPetInput.Text);
	updateSuggestions(petInput.Text);
end);
local minimizedFrame = Instance.new("Frame");
minimizedFrame.Size = UDim2.new(0, 140, 0, 40);
minimizedFrame.Position = UDim2.new(0.5, -70, 0.5, -20);
minimizedFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
minimizedFrame.BackgroundTransparency = 0.2;
minimizedFrame.Visible = false;
minimizedFrame.Parent = screenGui;
minimizedFrame.Active = true;
minimizedFrame.Draggable = true;
local uiCornerMin = Instance.new("UICorner");
uiCornerMin.CornerRadius = UDim.new(0, 8);
uiCornerMin.Parent = minimizedFrame;
local uiStrokeMin = Instance.new("UIStroke");
uiStrokeMin.Thickness = 2;
uiStrokeMin.Color = Color3.fromRGB(100, 100, 100);
uiStrokeMin.ApplyStrokeMode = Enum.ApplyStrokeMode.Border;
uiStrokeMin.Parent = minimizedFrame;
local titleLabel = Instance.new("TextLabel");
titleLabel.Size = UDim2.new(1, -60, 1, 0);
titleLabel.Position = UDim2.new(0, 10, 0, 0);
titleLabel.BackgroundTransparency = 1;
titleLabel.Text = UI_TITLE;
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
titleLabel.TextXAlignment = Enum.TextXAlignment.Left;
titleLabel.Font = Enum.Font.SourceSansSemibold;
titleLabel.TextSize = 20;
titleLabel.Parent = minimizedFrame;
local openButton = Instance.new("TextButton");
openButton.Size = UDim2.new(0, 25, 0, 25);
openButton.Position = UDim2.new(1, -55, 0.5, -12);
openButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40);
openButton.Text = "+";
openButton.TextColor3 = Color3.fromRGB(255, 255, 255);
openButton.Font = Enum.Font.SourceSansBold;
openButton.TextSize = 20;
openButton.Parent = minimizedFrame;
makeButtonCircular(openButton);
local closeMinButton = Instance.new("TextButton");
closeMinButton.Size = UDim2.new(0, 25, 0, 25);
closeMinButton.Position = UDim2.new(1, -28, 0.5, -12);
closeMinButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0);
closeMinButton.Text = "X";
closeMinButton.TextColor3 = Color3.fromRGB(255, 255, 255);
closeMinButton.Font = Enum.Font.SourceSansBold;
closeMinButton.TextSize = 18;
closeMinButton.Parent = minimizedFrame;
makeButtonCircular(closeMinButton);
local minimizeButton = Instance.new("TextButton");
minimizeButton.Size = UDim2.new(0, 25, 0, 25);
minimizeButton.Position = UDim2.new(1, -70, 0, 5);
minimizeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40);
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255);
minimizeButton.Text = "-";
minimizeButton.TextSize = 25;
minimizeButton.Parent = mainFrame;
makeButtonCircular(minimizeButton);
minimizeButton.MouseButton1Click:Connect(function()
	local FlatIdent_72401 = 0;
	while true do
		if (FlatIdent_72401 == 0) then
			mainFrame.Visible = false;
			minimizedFrame.Visible = true;
			break;
		end
	end
end);
openButton.MouseButton1Click:Connect(function()
	local FlatIdent_53D9 = 0;
	while true do
		if (FlatIdent_53D9 == 0) then
			mainFrame.Visible = true;
			minimizedFrame.Visible = false;
			break;
		end
	end
end);
closeButton.MouseButton1Click:Connect(function()
	local FlatIdent_30671 = 0;
	while true do
		if (FlatIdent_30671 == 0) then
			debugLog("UI closed and destroyed");
			screenGui:Destroy();
			break;
		end
	end
end);
closeMinButton.MouseButton1Click:Connect(function()
	debugLog("Minimized UI closed and destroyed");
	screenGui:Destroy();
end);
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if ((input.KeyCode == Enum.KeyCode.RightShift) and not gameProcessed) then
		if mainFrame.Visible then
			mainFrame.Visible = false;
			minimizedFrame.Visible = true;
		else
			local FlatIdent_6C277 = 0;
			while true do
				if (FlatIdent_6C277 == 0) then
					mainFrame.Visible = true;
					minimizedFrame.Visible = false;
					break;
				end
			end
		end
	end
end);
local hintLabel = Instance.new("TextLabel");
hintLabel.Size = UDim2.new(1, 0, 0, 20);
hintLabel.Position = UDim2.new(0, 0, 1, -20);
hintLabel.BackgroundTransparency = 1;
hintLabel.TextColor3 = Color3.fromRGB(180, 180, 180);
hintLabel.TextScaled = true;
hintLabel.Text = "Tip: Press [RightShift] to toggle UI";
hintLabel.Parent = tabFrame;
